:where([class^="ri-"])::before {
    content: "\f3c2";
}

.theme-dark {
    --bg-primary: #0a0a0f;
    --bg-secondary: #1a1b2e;
    --text-primary: #e0e6ed;
    --text-secondary: #a0a6b0;
    --accent: #00ff9d;
}

.theme-light {
    --bg-primary: #f8f9fa;
    --bg-secondary: #ffffff;
    --text-primary: #1f2937;
    --text-secondary: #6b7280;
    --accent: #007bff;
}

body {
    background-color: var(--bg-primary);
    color: var(--text-primary);
    transition: all 0.3s ease;
}

.glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.neon-glow {
    box-shadow: 0 0 20px rgba(0, 255, 157, 0.3);
}

.matrix-bg {
    background: linear-gradient(90deg, #0a0a0f 0%, #1a1b2e 100%);
}

.skill-bar {
    background: linear-gradient(90deg, var(--accent) 0%, rgba(0, 255, 157, 0.3) 100%);
}

.project-card {
    transform-style: preserve-3d;
    transition: transform 0.6s;
}

.project-card:hover {
    transform: rotateY(180deg);
}

.card-front, .card-back {
    backface-visibility: hidden;
    position: absolute;
    width: 100%;
    height: 100%;
}

.card-back {
    transform: rotateY(180deg);
}

.typewriter {
    overflow: hidden;
    border-right: 0.15em solid var(--accent);
    white-space: nowrap;
    margin: 0 auto;
    letter-spacing: 0.15em;
    animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: var(--accent) }
}

.floating {
    animation: float 6s ease-in-out infinite;
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
    100% { transform: translateY(0px); }
}

.particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--accent);
    border-radius: 50%;
    animation: particle-move 20s linear infinite;
}

@keyframes particle-move {
    0% { transform: translateY(100vh) translateX(0); opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { transform: translateY(-100vh) translateX(100px); opacity: 0; }
}

.hex-clip {
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}